# BelizeVibes Production Nginx Security Headers Configuration
# ==============================================================
# 
# This configuration provides enterprise-grade security headers for production deployment.
# HSTS is DISABLED by default and must be manually enabled with proper planning.
# CSP starts in Report-Only mode for safe staging validation.
#
# Usage:
# 1. Include this file in your nginx server block
# 2. Customize domains and report-uri endpoints
# 3. Test in staging with CSP Report-Only mode
# 4. Enable HSTS only after domain preload planning
# 5. Switch CSP from Report-Only to enforce mode after validation

server {
    listen 80;
    listen [::]:80;
    server_name belizevibes.com www.belizevibes.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name belizevibes.com www.belizevibes.com;
    
    # SSL Configuration (customize with your certificates)
    ssl_certificate /path/to/certificate.pem;
    ssl_certificate_key /path/to/private-key.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # Security Headers - Core Protection
    # ===================================
    
    # Prevent clickjacking attacks
    add_header X-Frame-Options "DENY" always;
    
    # Prevent MIME type sniffing
    add_header X-Content-Type-Options "nosniff" always;
    
    # Control referrer information
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Content Security Policy - START IN REPORT-ONLY MODE
    # =====================================================
    # This CSP allows our domain, Supabase, and Stripe while providing strong protection
    # IMPORTANT: Starts in Report-Only mode for safe staging validation
    
    # STAGING: CSP Report-Only Mode (Safe for initial deployment)
    add_header Content-Security-Policy-Report-Only "
        default-src 'self' https://belizevibes.com;
        script-src 'self' 'unsafe-inline' 'unsafe-eval' 
            https://js.stripe.com 
            https://*.supabase.co 
            https://www.google.com 
            https://www.gstatic.com;
        style-src 'self' 'unsafe-inline' 
            https://fonts.googleapis.com;
        img-src 'self' data: blob: 
            https: 
            https://*.supabase.co 
            https://*.stripe.com;
        connect-src 'self' 
            https://*.supabase.co 
            wss://*.supabase.co 
            https://api.stripe.com 
            https://*.stripe.com;
        font-src 'self' data: 
            https://fonts.gstatic.com;
        object-src 'none';
        media-src 'self' data: blob:;
        frame-src 'self' 
            https://js.stripe.com 
            https://hooks.stripe.com;
        worker-src 'self' blob:;
        manifest-src 'self';
        report-uri https://belizevibes.com/api/csp-report;
    " always;
    
    # PRODUCTION: Enforce CSP (Enable after Report-Only validation)
    # Uncomment the line below and comment the Report-Only line above
    # add_header Content-Security-Policy "..." always;
    
    # Permissions Policy - Minimal Required Permissions
    # =================================================
    add_header Permissions-Policy "
        camera=(), 
        microphone=(), 
        geolocation=(),
        payment=('self' https://js.stripe.com),
        usb=(),
        interest-cohort=()
    " always;
    
    # HSTS - DISABLED BY DEFAULT (Enable manually after planning)
    # ============================================================
    # CRITICAL: Only enable HSTS after:
    # 1. Confirming all subdomains support HTTPS
    # 2. Planning domain preload strategy  
    # 3. Understanding 12-month commitment implications
    
    # HSTS_ENABLED=false (Change to true when ready)
    # Uncomment and customize when ready to enable:
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Cross-Origin Policies (if needed for enhanced isolation)
    # =========================================================
    # Uncomment if your application requires enhanced origin isolation
    # add_header Cross-Origin-Opener-Policy "same-origin" always;
    # add_header Cross-Origin-Embedder-Policy "require-corp" always;
    
    # CORS Configuration - Secure Defaults
    # =====================================
    # Allow origins for your domain and Supabase
    add_header Access-Control-Allow-Origin "https://belizevibes.com" always;
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE" always;
    add_header Access-Control-Allow-Headers "Accept, Authorization, Cache-Control, Content-Type, DNT, If-Modified-Since, Keep-Alive, Origin, User-Agent, X-Requested-With, apikey" always;
    add_header Access-Control-Max-Age "86400" always;
    
    # Handle preflight requests
    if ($request_method = OPTIONS) {
        add_header Access-Control-Allow-Origin "https://belizevibes.com";
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PUT, DELETE";
        add_header Access-Control-Allow-Headers "Accept, Authorization, Cache-Control, Content-Type, DNT, If-Modified-Since, Keep-Alive, Origin, User-Agent, X-Requested-With, apikey";
        add_header Access-Control-Max-Age "86400";
        add_header Content-Type "text/plain charset=UTF-8";
        add_header Content-Length "0";
        return 204;
    }
    
    # Static file caching with security headers
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Apply security headers to static files too
        add_header X-Frame-Options "DENY";
        add_header X-Content-Type-Options "nosniff";
        add_header Referrer-Policy "strict-origin-when-cross-origin";
    }
    
    # API routes security
    location /api/ {
        # Apply stricter headers for API endpoints
        add_header X-Frame-Options "DENY";
        add_header X-Content-Type-Options "nosniff";
        add_header Referrer-Policy "no-referrer";
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        
        # Proxy to your backend application
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
    
    # Main application
    location / {
        # Serve your React application
        root /var/www/belizevibes/dist;
        try_files $uri $uri/ /index.html;
        
        # Cache HTML with shorter expiry
        location ~* \.html$ {
            expires 1h;
            add_header Cache-Control "public, must-revalidate";
            
            # Security headers for HTML pages
            add_header X-Frame-Options "DENY";
            add_header X-Content-Type-Options "nosniff";
            add_header Referrer-Policy "strict-origin-when-cross-origin";
        }
    }
}

# =============================
# SECURITY HEADERS ROLLOUT PLAN
# =============================
# 
# Phase 1: CSP Report-Only (CURRENT)
# - Deploy with Content-Security-Policy-Report-Only
# - Monitor reports for 2-4 weeks
# - Fix any legitimate violations
# 
# Phase 2: CSP Enforcement
# - Switch to Content-Security-Policy header
# - Monitor for any breaking changes
# - Adjust policy as needed
# 
# Phase 3: HSTS Enablement (Manual Decision Required)
# - Plan subdomain HTTPS coverage
# - Consider domain preload implications
# - Enable HSTS with appropriate max-age
# - Submit to browser preload lists if desired
#
# IMPORTANT: Always test in staging environment first!